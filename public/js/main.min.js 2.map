{"version":3,"sources":["index.js"],"names":[],"mappingsfile":"main.min.js","sourcesContent":["(function (funcName, baseObj) {\n\t// The public function name defaults to window.docReady\n\t// but you can pass in your own object and own function name and those will be used\n\t// if you want to put them in a different namespace\n\tfuncName = funcName || \"docReady\";\n\tbaseObj = baseObj || window;\n\tvar readyList = [];\n\tvar readyFired = false;\n\tvar readyEventHandlersInstalled = false;\n\n\t// call this when the document is ready\n\t// this function protects itself against being called more than once\n\tfunction ready() {\n\t\tif (!readyFired) {\n\t\t\t// this must be set to true before we start calling callbacks\n\t\t\treadyFired = true;\n\t\t\tfor (var i = 0; i < readyList.length; i++) {\n\t\t\t\t// if a callback here happens to add new ready handlers,\n\t\t\t\t// the docReady() function will see that it already fired\n\t\t\t\t// and will schedule the callback to run right after\n\t\t\t\t// this event loop finishes so all handlers will still execute\n\t\t\t\t// in order and no new ones will be added to the readyList\n\t\t\t\t// while we are processing the list\n\t\t\t\treadyList[i].fn.call(window, readyList[i].ctx);\n\t\t\t}\n\t\t\t// allow any closures held by these functions to free\n\t\t\treadyList = [];\n\t\t}\n\t}\n\n\tfunction readyStateChange() {\n\t\tif (document.readyState === \"complete\") {\n\t\t\tready();\n\t\t}\n\t}\n\n\t// This is the one public interface\n\t// docReady(fn, context);\n\t// the context argument is optional - if present, it will be passed\n\t// as an argument to the callback\n\tbaseObj[funcName] = function (callback, context) {\n\t\tif (typeof callback !== \"function\") {\n\t\t\tthrow new TypeError(\"callback for docReady(fn) must be a function\");\n\t\t}\n\t\t// if ready has already fired, then just schedule the callback\n\t\t// to fire asynchronously, but right away\n\t\tif (readyFired) {\n\t\t\tsetTimeout(function () {\n\t\t\t\tcallback(context);\n\t\t\t}, 1);\n\t\t\treturn;\n\t\t} else {\n\t\t\t// add the function and context to the list\n\t\t\treadyList.push({\n\t\t\t\tfn: callback,\n\t\t\t\tctx: context\n\t\t\t});\n\t\t}\n\t\t// if document already ready to go, schedule the ready function to run\n\t\tif (document.readyState === \"complete\") {\n\t\t\tsetTimeout(ready, 1);\n\t\t} else if (!readyEventHandlersInstalled) {\n\t\t\t// otherwise if we don't have event handlers installed, install them\n\t\t\tif (document.addEventListener) {\n\t\t\t\t// first choice is DOMContentLoaded event\n\t\t\t\tdocument.addEventListener(\"DOMContentLoaded\", ready, false);\n\t\t\t\t// backup is window load event\n\t\t\t\twindow.addEventListener(\"load\", ready, false);\n\t\t\t} else {\n\t\t\t\t// must be IE\n\t\t\t\tdocument.attachEvent(\"onreadystatechange\", readyStateChange);\n\t\t\t\twindow.attachEvent(\"onload\", ready);\n\t\t\t}\n\t\t\treadyEventHandlersInstalled = true;\n\t\t}\n\t}\n})(\"docReady\", window);\n\ndocReady(function () {\n\tconsole.log('oke');\n\t// Tooltips Initialization\n\ttoolTopInstall();\n\t// Collapse Task Board\n\tcollapseTaskBoard();\n});\n\n\n\n\nfunction collapseTaskBoard() {\n\tlet btnCollapse = document.querySelector('.block__btn--collapse button')\n\tlet boardCollapses = document.getElementsByClassName('block__collapse')\n\tlet state = 0\n\tboardCollapses.forEach(btnCollapse => {\n\t\tbtnCollapse.onclick = function () {\n\t\t\tboardCollapse.classList.toggle('block__collapse--show')\n\t\t\tconsole.log(boardCollapse.offsetParent);\n\n\t\t}\n\t});\n\n}\n\nfunction toolTopInstall() {\n\t$('[data-toggle=\"tooltip\"]').tooltip()\n}\n\n// Can not use Array.forEach \n"]}