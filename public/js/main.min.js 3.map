{"version":3,"sources":["index.js"],"names":["indexApp","toolTips","$","tooltip","listIdShortTable","taskTask","group","_defineProperty","_taskTask","console","log","animation","ghostClass","taskProgress","taskFinish","shortTable","id","opt","getElementById","document","initShortTable","key","readyList","baseObj","funcName","window","readyFired","readyEventHandlersInstalled","ready","i","length","fn","call","ctx","readyStateChange","readyState","callback","context","setTimeout","push","addEventListener","attachEvent"],"mappings":"iKAAA,IAAIA,SAAW,CACdC,SAAU,WACTC,EAAE,2BAA2BC,WAE9BC,iBAAkB,CACjBC,UAAAA,UAAAA,CALFC,MAAIN,CACHC,KAAAA,QAGAG,YAAAA,kBACCC,UAAAA,IACCC,WAAO,kBADRC,gBAAAC,UAAA,cAEQ,mBAFRD,gBAAAC,UAAA,UAGE,WAHFC,QAAAC,IAAA,gBAAAH,gBAAAC,UAAA,QAMCG,WACAC,QAAAA,IAAY,cAPbJ,WAcEK,aAfe,CAmBjBA,MAAAA,CACCP,KAAO,QAAAK,UADM,KAAAG,WAnBG,CAyBjBA,MAAAA,CACCR,KAAO,QAAAK,UADI,MAzBKI,WAJJ,SAAAC,EAAAC,GAqCdF,IAAAA,EAAAA,SAAYG,eAAAF,GACFG,IAASD,SAAAA,EAATD,IAETG,eAxCa,WAyCdA,IAAAA,IAAAA,KAAgBpB,SAAAI,iBACfJ,SAAWqB,WAAOrB,EAASI,SAAAA,iBAAkBiB,MAkB9CrB,SAAAoB,iBAGA,SAAIE,EAAJC,GAIAC,EAAAA,GAAA,WACAD,EAAAA,GAAAE,OACA,IAAAH,EAAA,GACCI,GAAA,EACCC,GAAA,EAIC,SAAAC,IACA,IAAAF,EAAA,CAEAA,GAAA,EACA,IAAA,IAAAG,EAAA,EAAAA,EAAAP,EAAAQ,OAAAD,IACAP,EAAUO,GAAGE,GAAGC,KAAKP,OAAQH,EAAUO,GAAGI,KAS3CL,EAAAA,IAIF,SAAAM,IACA,aAAAf,SAAAgB,YACAP,IAQCL,EAAIG,GAAY,SAAAU,EAAAC,GACfC,GAAuB,mBAAvBA,EACCF,MAAAA,IAASC,UAAT,gDAIDX,EACAJ,WAAUiB,WACTR,EAAIK,IACJH,IAIFX,EAAIH,KAASgB,CACZG,GAAAA,EADDL,IAEOI,IAIqB,aAA1BlB,SAASqB,WACTF,WAAAV,EAAA,GACOY,IAEPrB,SAAAqB,kBAEAf,SAAOgB,iBAAY,mBAAnBb,GAAA,GAEDD,OAAAA,iBAAAA,OAA8BC,GAA9B,KAGAT,SA5EHsB,YAAA,qBAAAP,GAuEIT,OAAOgB,YAAY,SAAUb,IAE9BD,GAA8B,KAnEhC,CAsEE,WAAYF","file":"main.min.js","sourcesContent":["let indexApp = {\n\ttoolTips: () => {\n\t\t$('[data-toggle=\"tooltip\"]').tooltip()\n\t},\n\tlistIdShortTable: {\n\t\ttaskTask: {\n\t\t\tgroup: {\n\t\t\t\tname: 'sang',\n\t\t\t\t// put: false,\n\t\t\t},\n\t\t\tchosenClass: 'sortable-chosen',\n\t\t\tanimation: 500,\n\t\t\tghostClass: 'sortable-ghost',\n\t\t\tchosenClass: 'sortable-chosen',\n\t\t\tonStart: () => {\n\t\t\t\tconsole.log('Start drag');\n\t\t\t},\n\t\t\tonEnd: () => {\n\t\t\t\tconsole.log('End Drag');\n\t\t\t}\n\t\t\t// handle: '.my-handle',\n\t\t\t// filter: '.block__item--normal'\n\t\t},\n\t\ttaskProgress: {\n\t\t\tgroup: {\n\t\t\t\tname: 'sang'\n\t\t\t},\n\t\t\tanimation: 500,\n\t\t},\n\t\ttaskFinish: {\n\t\t\tgroup: {\n\t\t\t\tname: 'sang',\n\t\t\t\t// pull: false\n\t\t\t},\n\t\t\tanimation: 500,\n\t\t}\n\t},\n\tshortTable: (id, opt) => {\n\t\tlet el = document.getElementById(id)\n\t\tlet sortable = new Sortable(el, opt)\n\t},\n\tinitShortTable: () => {\n\t\tfor (const key in indexApp.listIdShortTable) {\n\t\t\tindexApp.shortTable(key , indexApp.listIdShortTable[key])\n\t\t}\n\n\t}\n}\n\n\n\n\n\n\nindexApp.initShortTable();\n\n\n(function (funcName, baseObj) {\n\t// The public function name defaults to window.docReady\n\t// but you can pass in your own object and own function name and those will be used\n\t// if you want to put them in a different namespace\n\tfuncName = funcName || \"docReady\";\n\tbaseObj = baseObj || window;\n\tvar readyList = [];\n\tvar readyFired = false;\n\tvar readyEventHandlersInstalled = false;\n\n\t// call this when the document is ready\n\t// this function protects itself against being called more than once\n\tfunction ready() {\n\t\tif (!readyFired) {\n\t\t\t// this must be set to true before we start calling callbacks\n\t\t\treadyFired = true;\n\t\t\tfor (var i = 0; i < readyList.length; i++) {\n\t\t\t\t// if a callback here happens to add new ready handlers,\n\t\t\t\t// the docReady() function will see that it already fired\n\t\t\t\t// and will schedule the callback to run right after\n\t\t\t\t// this event loop finishes so all handlers will still execute\n\t\t\t\t// in order and no new ones will be added to the readyList\n\t\t\t\t// while we are processing the list\n\t\t\t\treadyList[i].fn.call(window, readyList[i].ctx);\n\t\t\t}\n\t\t\t// allow any closures held by these functions to free\n\t\t\treadyList = [];\n\t\t}\n\t}\n\n\tfunction readyStateChange() {\n\t\tif (document.readyState === \"complete\") {\n\t\t\tready();\n\t\t}\n\t}\n\n\t// This is the one public interface\n\t// docReady(fn, context);\n\t// the context argument is optional - if present, it will be passed\n\t// as an argument to the callback\n\tbaseObj[funcName] = function (callback, context) {\n\t\tif (typeof callback !== \"function\") {\n\t\t\tthrow new TypeError(\"callback for docReady(fn) must be a function\");\n\t\t}\n\t\t// if ready has already fired, then just schedule the callback\n\t\t// to fire asynchronously, but right away\n\t\tif (readyFired) {\n\t\t\tsetTimeout(function () {\n\t\t\t\tcallback(context);\n\t\t\t}, 1);\n\t\t\treturn;\n\t\t} else {\n\t\t\t// add the function and context to the list\n\t\t\treadyList.push({\n\t\t\t\tfn: callback,\n\t\t\t\tctx: context\n\t\t\t});\n\t\t}\n\t\t// if document already ready to go, schedule the ready function to run\n\t\tif (document.readyState === \"complete\") {\n\t\t\tsetTimeout(ready, 1);\n\t\t} else if (!readyEventHandlersInstalled) {\n\t\t\t// otherwise if we don't have event handlers installed, install them\n\t\t\tif (document.addEventListener) {\n\t\t\t\t// first choice is DOMContentLoaded event\n\t\t\t\tdocument.addEventListener(\"DOMContentLoaded\", ready, false);\n\t\t\t\t// backup is window load event\n\t\t\t\twindow.addEventListener(\"load\", ready, false);\n\t\t\t} else {\n\t\t\t\t// must be IE\n\t\t\t\tdocument.attachEvent(\"onreadystatechange\", readyStateChange);\n\t\t\t\twindow.attachEvent(\"onload\", ready);\n\t\t\t}\n\t\t\treadyEventHandlersInstalled = true;\n\t\t}\n\t}\n})(\"docReady\", window);\n\n\n\n\n\n\n\n\n\n\n// Can not use Array.forEach\n"]}